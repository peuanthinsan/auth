openapi: 3.0.0
info:
  title: Auth Service API
  version: 1.0.0
servers:
  - url: /api
paths:
  /register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
                firstName:
                  type: string
                lastName:
                  type: string
              required:
                - username
                - password
                - email
                - firstName
                - lastName
      responses:
        '200':
          description: User registered
          content:
            application/json:
              example:
                message: Registered
  /superadmin:
    post:
      summary: Create the first super admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
                firstName:
                  type: string
                lastName:
                  type: string
              required:
                - username
                - password
                - email
                - firstName
                - lastName
      responses:
        '200':
          description: Super admin created
          content:
            application/json:
              example:
                message: Super admin created
  /login:
    post:
      summary: Log in
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '200':
          description: Logged in
          content:
            application/json:
              example:
                token: JWT_TOKEN
                refreshToken: REFRESH_TOKEN
  /logout:
    post:
      summary: Log out
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
              required:
                - refreshToken
      responses:
        '200':
          description: Logged out
          content:
            application/json:
              example:
                message: Logged out
  /refresh:
    post:
      summary: Refresh access token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
              required:
                - refreshToken
      responses:
        '200':
          description: Token refreshed
          content:
            application/json:
              example:
                token: JWT_TOKEN
  /profile:
    get:
      summary: Get current user profile
      responses:
        '200':
          description: Profile information
          content:
            application/json:
              example:
                id: user_id
                username: johndoe
                email: johndoe@example.com
                firstName: John
                lastName: Doe
                profilePicture: /uploads/img.jpg
                roleCodes:
                  - USER
                roles:
                  - User
                isSuperAdmin: false
                balances:
                  - orgId: org_id
                    orgName: Example Org
                    amount: 100
                organizations:
                  - id: org_id
                    name: Example Org
    patch:
      summary: Update profile
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                username:
                  type: string
                firstName:
                  type: string
                lastName:
                  type: string
                profilePicture:
                  type: string
                  format: binary
      responses:
        '200':
          description: Profile updated
          content:
            application/json:
              example:
                message: Profile updated
    delete:
      summary: Delete profile
      responses:
        '200':
          description: Account deleted
          content:
            application/json:
              example:
                message: Account deleted
  /user/organizations:
    get:
      summary: List organizations for the current user
      responses:
        '200':
          description: Organization list
          content:
            application/json:
              example:
                organizations:
                  - id: org_id
                    name: Example Org
  /password/change:
    post:
      summary: Change password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                oldPassword:
                  type: string
                newPassword:
                  type: string
              required:
                - oldPassword
                - newPassword
      responses:
        '200':
          description: Password changed
          content:
            application/json:
              example:
                message: Password changed
  /password/forgot:
    post:
      summary: Request password reset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
              required:
                - username
      responses:
        '200':
          description: Token created
          content:
            application/json:
              example:
                message: Reset token created
                token: RESET_TOKEN
  /password/reset:
    post:
      summary: Reset password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                newPassword:
                  type: string
              required:
                - token
                - newPassword
      responses:
        '200':
          description: Password reset
          content:
            application/json:
              example:
                message: Password reset
  /organizations:
    post:
      summary: Create organization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
                - name
      responses:
        '200':
          description: Organization created
          content:
            application/json:
              example:
                message: Organization created
                orgId: org_id
    get:
      summary: List organizations
      responses:
        '200':
          description: Organization list
          content:
            application/json:
              example:
                - id: org_id
                  name: Example Org
                  members: 1
                  invites: 0
  /organizations/{id}/members:
    post:
      summary: Add member to organization
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                roleId:
                  type: string
              required:
                - userId
      responses:
        '200':
          description: Member added
          content:
            application/json:
              example:
                message: Member added
  /organizations/{id}/members/{userId}:
    delete:
      summary: Remove member from organization
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Member removed
          content:
            application/json:
              example:
                message: Member removed
  /organizations/{id}/invite:
    post:
      summary: Invite user to organization
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                role:
                  type: string
              required:
                - email
      responses:
        '200':
          description: Invite created
          content:
            application/json:
              example:
                message: Invite created
                inviteId: invite_id
  /organizations/{id}/invites:
    get:
      summary: List invites for organization
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Invite list
          content:
            application/json:
              example:
                - id: invite_id
                  email: user@example.com
                  token: abc123
                  role: USER
  /organizations/{id}:
    delete:
      summary: Delete organization
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Organization deleted
          content:
            application/json:
              example:
                message: Organization deleted
    patch:
      summary: Update organization
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          description: Organization updated
          content:
            application/json:
              example:
                message: Organization updated
  /users:
    get:
      summary: List users
      parameters:
        - in: query
          name: orgId
          schema:
            type: string
      responses:
        '200':
          description: Users list
          content:
            application/json:
              example:
                - id: user_id
                  username: johndoe
                  email: johndoe@example.com
                  firstName: John
                  lastName: Doe
                  profilePicture: /uploads/img.jpg
                  balance: 0
                  organizations:
                    - id: org_id
                      name: Example Org
                  roleIds:
                    - role_id
                  roleCodes:
                    - USER
  /users/{id}:
    delete:
      summary: Delete user
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User deleted
          content:
            application/json:
              example:
                message: User deleted
  /users/{id}/roles:
    post:
      summary: Update user roles
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleIds:
                  type: array
                  items:
                    type: string
              required:
                - roleIds
      responses:
        '200':
          description: Roles updated
          content:
            application/json:
              example:
                message: Roles updated
  /roles:
    get:
      summary: List roles
      parameters:
        - in: query
          name: orgId
          schema:
            type: string
      responses:
        '200':
          description: Roles list
          content:
            application/json:
              example:
                - id: role_id
                  code: USER
                  name: User
                  system: false
    post:
      summary: Create role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                name:
                  type: string
                orgId:
                  type: string
              required:
                - code
                - orgId
      responses:
        '200':
          description: Role created
          content:
            application/json:
              example:
                message: Role created
                id: role_id
  /roles/{id}:
    patch:
      summary: Update role
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                name:
                  type: string
      responses:
        '200':
          description: Role updated
          content:
            application/json:
              example:
                message: Role updated
    delete:
      summary: Delete role
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Role deleted
          content:
            application/json:
              example:
                message: Role deleted
  /invites:
    get:
      summary: List all invites
      responses:
        '200':
          description: Invite list
          content:
            application/json:
              example:
                - id: invite_id
                  email: user@example.com
                  org: Example Org
                  token: abc123
                  role: USER
  /invites/{id}:
    delete:
      summary: Delete invite
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Invite deleted
          content:
            application/json:
              example:
                message: Invite deleted
  /my-invites:
    get:
      summary: List invites for current user
      responses:
        '200':
          description: Invite list
          content:
            application/json:
              example:
                - id: invite_id
                  org: Example Org
                  orgId: org_id
                  token: abc123
                  role: USER
  /invites/{id}/accept:
    post:
      summary: Accept invite
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
              required:
                - token
      responses:
        '200':
          description: Invite accepted
          content:
            application/json:
              example:
                message: Invite accepted
                orgId: org_id
  /transfer:
    post:
      summary: Transfer currency
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                toUsername:
                  type: string
                amount:
                  type: number
                orgId:
                  type: string
              required:
                - toUsername
                - amount
                - orgId
      responses:
        '200':
          description: Transfer complete
          content:
            application/json:
              example:
                message: Transfer complete
  /balance:
    get:
      summary: Get user balance
      parameters:
        - in: query
          name: orgId
          schema:
            type: string
      responses:
        '200':
          description: Balance information
          content:
            application/json:
              example:
                balances:
                  - orgId: org_id
                    orgName: Example Org
                    amount: 100
